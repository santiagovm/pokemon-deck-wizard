version: 2.1
jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/working-directory
    environment:
      # customize the jvm maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - run:
          name: build spring app
          command: ./gradlew
      - persist_to_workspace:
          root: ~/working-directory
          paths:
            - .k8s
            - build/libs
            - Dockerfile

  create-docker-image:
    docker:
      - image: cimg/base:2020.04
    working_directory: ~/working-directory
    steps:
      - attach_workspace:
          at: ~/working-directory
      - setup_remote_docker
      - run:
          name: build and push docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build --tag=$DOCKER_ACCOUNT/pokemon-deck-wizard:$TAG .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_ACCOUNT/pokemon-deck-wizard:$TAG

  deploy:
    docker:
      - image: cimg/base:2020.04
    working_directory: ~/working-directory
    steps:
      - attach_workspace:
          at: ~/working-directory
      - run:
          name: install envsubst
          command: |
            sudo apt-get update
            sudo apt-get install gettext
      - run:
          name: install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
            kubectl version --client
      - run:
          name: prepare k8s template
          command: |
            rm -rf .k8s/.generated && mkdir -p .k8s/.generated
            for f in .k8s/templates/ci.yml
              do
              envsubst < $f > ".k8s/.generated/$(basename $f)"
            done
      - run:
          name: setup kubectl
          command: |
            kubectl config set-cluster ci-cluster --server=${K8S_CLUSTER_SERVER} --insecure-skip-tls-verify
            kubectl config set-credentials k8s-user --token=${K8S_ACCESS_TOKEN}
            kubectl config set-context ci-context --cluster=ci-cluster --namespace=ci-namespace --user=k8s-user
            kubectl config use-context ci-context
      - run:
          name: deploy to k8s ci namespace
          command: |
            kubectl apply -f .k8s/.generated/ --validate=true
            kubectl get pods

workflows:
  version: 2
  "test, build, and deploy":
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - create-docker-image:
          requires:
            - build
      - deploy:
          requires:
            - create-docker-image
